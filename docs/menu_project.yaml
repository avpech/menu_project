openapi: 3.1.0
info:
  title: MenuAPI
  description: API сервис для меню
  version: 0.1.0
paths:
  "/api/v1/menus/":
    get:
      tags:
      - Меню
      - GET-запросы (получение списка объектов)
      summary: Получение списка меню
      description: |-
        Получить список всех меню.

        - **id**: Идентификатор меню.
        - **title**: Название меню.
        - **description**: Описание меню.
        - **submenus_count**: Количество подменю в меню.
        - **dishes_count**: Количество блюд в меню.
      operationId: get_all_menus_api_v1_menus__get
      responses:
        '200':
          description: Успешное получение списка меню
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/MenuWithCountDB"
                type: array
                title: Response Get All Menus Api V1 Menus  Get
    post:
      tags:
      - Меню
      - POST-запросы (создание объекта)
      summary: Создание нового меню
      description: |-
        Создать меню.

        - **id**: Идентификатор меню.
        - **title**: Название меню.
        - **description**: Описание меню.
      operationId: create_menu_api_v1_menus__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MenuCreate"
        required: true
      responses:
        '201':
          description: Успешное создание нового меню
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuDB"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/menus/{menu_id}":
    get:
      tags:
      - Меню
      - GET-запросы (получение определенного объекта)
      summary: Получение меню
      description: |-
        Получить меню по id.

        - **id**: Идентификатор меню.
        - **title**: Название меню.
        - **description**: Описание меню.
        - **submenus_count**: Количество подменю в меню.
        - **dishes_count**: Количество блюд в меню.
      operationId: get_menu_api_v1_menus__menu_id__get
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      responses:
        '200':
          description: Успешное получение меню
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuWithCountDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    patch:
      tags:
      - Меню
      - PATCH-запросы (обновление объекта)
      summary: Обновление существующего меню
      description: |-
        Изменить меню.

        - **id**: Идентификатор меню.
        - **title**: Название меню.
        - **description**: Описание меню.
      operationId: update_menu_api_v1_menus__menu_id__patch
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MenuUpdate"
      responses:
        '200':
          description: Успешное обновление меню
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Меню
      - DELETE-запросы (удаление объекта)
      summary: Удаление меню
      description: |-
        Удалить меню.

        - **id**: Идентификатор меню.
        - **title**: Название меню.
        - **description**: Описание меню.
      operationId: delete_menu_api_v1_menus__menu_id__delete
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      responses:
        '200':
          description: Успешное удаление меню
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/menus/{menu_id}/submenus":
    get:
      tags:
      - Подменю
      - GET-запросы (получение списка объектов)
      summary: Получение списка подменю
      description: |-
        Получить список всех подменю.

        - **id**: Идентификатор подменю.
        - **title**: Название подменю.
        - **description**: Описание подменю.
        - **menu_id**: Идентификатор связанного меню.
        - **dishes_count**: Количество блюд в подменю.
      operationId: get_all_submenus_api_v1_menus__menu_id__submenus_get
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      responses:
        '200':
          description: Успешное получение списка подменю
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubmenuWithCountDB"
                title: Response Get All Submenus Api V1 Menus  Menu Id  Submenus Get
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLDoesNotExistError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      tags:
      - Подменю
      - POST-запросы (создание объекта)
      summary: Создание нового подменю
      description: |-
        Создать подменю.

        - **id**: Идентификатор подменю.
        - **title**: Название подменю.
        - **description**: Описание подменю.
        - **menu_id**: Идентификатор связанного меню.
      operationId: create_submenu_api_v1_menus__menu_id__submenus_post
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubmenuCreate"
      responses:
        '201':
          description: Успешное создание нового подменю
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLDoesNotExistError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/menus/{menu_id}/submenus/{submenu_id}":
    get:
      tags:
      - Подменю
      - GET-запросы (получение определенного объекта)
      summary: Получение подменю
      description: |-
        Получить подменю по id.

        - **id**: Идентификатор подменю.
        - **title**: Название подменю.
        - **description**: Описание подменю.
        - **menu_id**: Идентификатор связанного меню.
        - **dishes_count**: Количество блюд в подменю.
      operationId: get_submenu_api_v1_menus__menu_id__submenus__submenu_id__get
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      responses:
        '200':
          description: Успешное получение подменю
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuWithCountDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    patch:
      tags:
      - Подменю
      - PATCH-запросы (обновление объекта)
      summary: Обновление существующего подменю
      description: |-
        Изменить подменю.

        - **id**: Идентификатор подменю.
        - **title**: Название подменю.
        - **description**: Описание подменю.
        - **menu_id**: Идентификатор связанного меню.
      operationId: update_submenu_api_v1_menus__menu_id__submenus__submenu_id__patch
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubmenuUpdate"
      responses:
        '200':
          description: Успешное обновление подменю
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Подменю
      - DELETE-запросы (удаление объекта)
      summary: Удаление подменю
      description: |-
        Удалить подменю.

        - **id**: Идентификатор подменю.
        - **title**: Название подменю.
        - **description**: Описание подменю.
        - **menu_id**: Идентификатор связанного меню.
      operationId: delete_submenu_api_v1_menus__menu_id__submenus__submenu_id__delete
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      responses:
        '200':
          description: Успешное удаление подменю
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubmenuNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/menus/{menu_id}/submenus/{submenu_id}/dishes":
    get:
      tags:
      - Блюда
      - GET-запросы (получение списка объектов)
      summary: Получение списка блюд
      description: |-
        Получить список всех блюд.

        - **id**: Идентификатор блюда.
        - **title**: Название блюда.
        - **description**: Описание блюда.
        - **price**: Цена блюда.
        - **submenu_id**: Идентификатор связанного подменю.
      operationId: get_all_dishes_api_v1_menus__menu_id__submenus__submenu_id__dishes_get
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      responses:
        '200':
          description: Успешное получение списка блюд
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DishDB"
                title: Response Get All Dishes Api V1 Menus  Menu Id  Submenus  Submenu
                  Id  Dishes Get
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLDoesNotExistError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      tags:
      - Блюда
      - POST-запросы (создание объекта)
      summary: Создание нового блюда
      description: |-
        Добавить блюдо.

        - **id**: Идентификатор блюда.
        - **title**: Название блюда.
        - **description**: Описание блюда.
        - **price**: Цена блюда.
        - **submenu_id**: Идентификатор связанного подменю.
      operationId: create_dish_api_v1_menus__menu_id__submenus__submenu_id__dishes_post
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DishCreate"
      responses:
        '201':
          description: Успешное создание нового блюда
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLDoesNotExistError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/menus/{menu_id}/submenus/{submenu_id}/dishes/{dish_id}":
    get:
      tags:
      - Блюда
      - GET-запросы (получение определенного объекта)
      summary: Получение блюда
      description: |-
        Получить блюдо по id.

        - **id**: Идентификатор блюда.
        - **title**: Название блюда.
        - **description**: Описание блюда.
        - **price**: Цена блюда.
        - **submenu_id**: Идентификатор связанного подменю.
      operationId: get_dish_api_v1_menus__menu_id__submenus__submenu_id__dishes__dish_id__get
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      - name: dish_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор блюда
          title: Dish Id
        description: Идентификатор блюда
      responses:
        '200':
          description: Успешное получение блюда
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    patch:
      tags:
      - Блюда
      - PATCH-запросы (обновление объекта)
      summary: Обновление существующего блюда
      description: |-
        Изменить блюдо.

        - **id**: Идентификатор блюда.
        - **title**: Название блюда.
        - **description**: Описание блюда.
        - **price**: Цена блюда.
        - **submenu_id**: Идентификатор связанного подменю.
      operationId: update_dish_api_v1_menus__menu_id__submenus__submenu_id__dishes__dish_id__patch
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      - name: dish_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор блюда
          title: Dish Id
        description: Идентификатор блюда
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DishUpdate"
      responses:
        '200':
          description: Успешное обновление блюда
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
      - Блюда
      - DELETE-запросы (удаление объекта)
      summary: Удаление блюда
      description: |-
        Удалить блюдо.

        - **id**: Идентификатор блюда.
        - **title**: Название блюда.
        - **description**: Описание блюда.
        - **price**: Цена блюда.
        - **submenu_id**: Идентификатор связанного подменю.
      operationId: delete_dish_api_v1_menus__menu_id__submenus__submenu_id__dishes__dish_id__delete
      parameters:
      - name: menu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор меню
          title: Menu Id
        description: Идентификатор меню
      - name: submenu_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор подменю
          title: Submenu Id
        description: Идентификатор подменю
      - name: dish_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          description: Идентификатор блюда
          title: Dish Id
        description: Идентификатор блюда
      responses:
        '200':
          description: Успешное удаление блюда
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishDB"
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DishNotFoundError"
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    DishCreate:
      properties:
        title:
          type: string
          maxLength: 50
          title: Title
          description: Название блюда
          examples:
          - Название блюда
        description:
          type: string
          maxLength: 1000
          title: Description
          description: Описание блюда
          examples:
          - Описание блюда
        price:
          type: string
          title: Price
          description: Цена блюда. Должно быть неотрицательное значение
          examples:
          - '20.50'
      additionalProperties: false
      type: object
      required:
      - title
      - description
      - price
      title: DishCreate
      description: Схема для создания блюд.
    DishDB:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
          description: Название блюда
          examples:
          - Название блюда
        description:
          type: string
          title: Description
          description: Описание блюда
          examples:
          - Описание блюда
        price:
          type: string
          title: Price
          description: Цена блюда. Должно быть неотрицательное значение
          examples:
          - '20.50'
        submenu_id:
          type: string
          format: uuid
          title: Submenu Id
          description: id связанного подменю
      type: object
      required:
      - id
      - title
      - description
      - price
      - submenu_id
      title: DishDB
      description: Схема для отображения данных о блюдах.
    DishNotFoundError:
      properties:
        detail:
          type: string
          title: Detail
          examples:
          - dish not found
      type: object
      required:
      - detail
      title: DishNotFoundError
      description: Блюдо не найдено.
    DishUpdate:
      properties:
        title:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Title
          description: Название блюда
          examples:
          - Название блюда
        description:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Description
          description: Описание блюда
          examples:
          - Описание блюда
        price:
          anyOf:
          - type: string
          - type: 'null'
          title: Price
          description: Цена блюда. Должно быть неотрицательное значение
          examples:
          - '20.50'
      additionalProperties: false
      type: object
      title: DishUpdate
      description: Схема для изменения блюд.
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    MenuCreate:
      properties:
        title:
          type: string
          maxLength: 50
          title: Title
          description: Название меню
          examples:
          - Название меню
        description:
          type: string
          maxLength: 200
          title: Description
          description: Описание меню
          examples:
          - Описание меню
      additionalProperties: false
      type: object
      required:
      - title
      - description
      title: MenuCreate
      description: Схема для создания меню.
    MenuDB:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
          description: Название меню
          examples:
          - Название меню
        description:
          type: string
          title: Description
          description: Описание меню
          examples:
          - Описание меню
      type: object
      required:
      - id
      - title
      - description
      title: MenuDB
      description: Схема для отображения данных о меню.
    MenuNotFoundError:
      properties:
        detail:
          type: string
          title: Detail
          examples:
          - menu not found
      type: object
      required:
      - detail
      title: MenuNotFoundError
      description: Меню не найдено.
    MenuUpdate:
      properties:
        title:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Title
          description: Название меню
          examples:
          - Название меню
        description:
          anyOf:
          - type: string
            maxLength: 200
          - type: 'null'
          title: Description
          description: Описание меню
          examples:
          - Описание меню
      additionalProperties: false
      type: object
      title: MenuUpdate
      description: Схема для изменения меню.
    MenuWithCountDB:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
          description: Название меню
          examples:
          - Название меню
        description:
          type: string
          title: Description
          description: Описание меню
          examples:
          - Описание меню
        submenus_count:
          type: integer
          title: Submenus Count
          description: Количество подменю в меню
        dishes_count:
          type: integer
          title: Dishes Count
          description: Количество блюд в меню
      type: object
      required:
      - id
      - title
      - description
      - submenus_count
      - dishes_count
      title: MenuWithCountDB
      description: Расширенная схема для отображения данных о меню.
    SubmenuCreate:
      properties:
        title:
          type: string
          maxLength: 50
          title: Title
          description: Название подменю
          examples:
          - Название подменю
        description:
          type: string
          maxLength: 200
          title: Description
          description: Описание подменю
          examples:
          - Описание подменю
      additionalProperties: false
      type: object
      required:
      - title
      - description
      title: SubmenuCreate
      description: Схема для создания подменю.
    SubmenuDB:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
          description: Название подменю
          examples:
          - Название подменю
        description:
          type: string
          title: Description
          description: Описание подменю
          examples:
          - Описание подменю
        menu_id:
          type: string
          format: uuid
          title: Menu Id
          description: id связанного меню
      type: object
      required:
      - id
      - title
      - description
      - menu_id
      title: SubmenuDB
      description: Схема для отображения данных о подменю.
    SubmenuNotFoundError:
      properties:
        detail:
          type: string
          title: Detail
          examples:
          - submenu not found
      type: object
      required:
      - detail
      title: SubmenuNotFoundError
      description: Субменю не найдено.
    SubmenuUpdate:
      properties:
        title:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Title
          description: Название подменю
          examples:
          - Название подменю
        description:
          anyOf:
          - type: string
            maxLength: 200
          - type: 'null'
          title: Description
          description: Описание подменю
          examples:
          - Описание подменю
      additionalProperties: false
      type: object
      title: SubmenuUpdate
      description: Схема для изменения подменю.
    SubmenuWithCountDB:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
          description: Название подменю
          examples:
          - Название подменю
        description:
          type: string
          title: Description
          description: Описание подменю
          examples:
          - Описание подменю
        menu_id:
          type: string
          format: uuid
          title: Menu Id
          description: id связанного меню
        dishes_count:
          type: integer
          title: Dishes Count
          description: Количество блюд в подменю
      type: object
      required:
      - id
      - title
      - description
      - menu_id
      - dishes_count
      title: SubmenuWithCountDB
      description: Расширенная схема для отображения данных о подменю.
    URLDoesNotExistError:
      properties:
        detail:
          type: string
          title: Detail
          examples:
          - url not found
      type: object
      required:
      - detail
      title: URLDoesNotExistError
      description: URL не найден.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
tags:
- name: Меню
  description: Взаимодействие с меню.
- name: Подменю
  description: Взаимодействие с подменю.
- name: Блюда
  description: Взаимодействие с блюдами.
- name: GET-запросы (получение списка объектов)
- name: GET-запросы (получение определенного объекта)
- name: POST-запросы (создание объекта)
- name: PATCH-запросы (обновление объекта)
- name: DELETE-запросы (удаление объекта)
