version: '3.8'

services:
  postgres_menu:
    container_name: postgres_menu
    image: postgres:15.1-alpine
    restart: always
    volumes:
      - db_menu_volume:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - menu_network
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 10s

  redis_menu:
    container_name: redis_menu
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - menu_network
    env_file:
      - ./.env

  rabbitmq:
    container_name: rabbit_menu
    restart: always
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    networks:
      - menu_network
    env_file:
      - ./.env

  api_menu:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: "postgres_menu"
      REDIS_HOST: "redis_menu"
    entrypoint: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    networks:
      - menu_network
    ports:
      - "8000:8000"
    depends_on:
      postgres_menu:
        condition: service_healthy
      redis_menu:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
      - ./.env

  celery_worker_beat:
    container_name: celery_menu
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: "postgres_menu"
      REDIS_HOST: "redis_menu"
      RABBITMQ_HOST: "rabbitmq"
    entrypoint: sh -c "celery -A app.tasks.celery_tasks:celery_app worker --beat --loglevel=info"
    networks:
      - menu_network
    volumes:
      - ./app/admin/Menu.xlsx:/src/app/admin/Menu.xlsx
    depends_on:
      postgres_menu:
        condition: service_healthy
      api_menu:
        condition: service_started
      redis_menu:
        condition: service_started
      rabbitmq:
        condition: service_started
    env_file:
      - ./.env

networks:
  menu_network:
    name: menu_network

volumes:
  db_menu_volume:
